name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npm run typecheck
    
    - name: Run tests
      run: npm run test:all
    
    - name: Build
      run: npm run build
    
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
    
  package-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Create package
      run: npm pack
    
    - name: Check package size
      run: |
        PACKAGE_SIZE=$(ls -lh kintone-as-code-*.tgz | awk '{print $5}')
        echo "Package size: $PACKAGE_SIZE"
        
    - name: Test package installation
      run: |
        mkdir test-install
        cd test-install
        npm init -y
        npm install ../kintone-as-code-*.tgz
        npx kintone-as-code --version